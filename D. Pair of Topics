/*
Author: Fuadul Hasan(fuadul202@gmail.com)
BSMRSTU,Gopalganj
*/
#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

template<class T> using oset=tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int solve()
{
	//happy coding

	oset<array<int,2>>s;
	//oset<ar<int, 2>> s;
	int n;
	cin>>n;
	int a[n+1],b[n+1];
	for(int i=0;i<n;i++) cin>>a[i];
	for(int i=0;i<n;i++) cin>>b[i];


	long long ans = 0;
	for(int i=0;i<n;i++){
		//cout<<s.order_of_key({a[i]-b[i],0})<<" ";
		//cout<<b[i]-a[i]<<" "<<i<<endl;
		ans+=s.order_of_key({a[i]-b[i],0});
		s.insert({b[i]-a[i],i});
	}

	for(int i=0;i<n;i++){
		//cout<<s.order_of_key({a[i]-b[i],0})<<" ";
	}cout<<endl;

	cout<<ans<<endl;

	//error()
	return 0;
}

int main(){
	int test = 1, tc = 0;
	//scanf("%d", &test);//(void)getchar();
	while (test--)solve();
	return 0;
}
